{"version":3,"file":"main.67997135b3b2464f97d4.bundle.js","sources":["webpack:///../datalith-hexmap/src/components/HexMap/index.tsx"],"sourcesContent":["import { GridMap, GridMapProps } from '@datalith/gridmap'\nimport * as React from 'react'\n\nexport type HexMapProps = Omit<GridMapProps, 'customRender'>\nexport class HexMap extends React.Component<HexMapProps> {\n  static defaultProps = GridMap.defaultProps\n\n  render() {\n    return (\n      <GridMap\n        {...this.props}\n        customRender={({ x, y, j, value }, props) => {\n          const sqrt3 = Math.sqrt(3)\n          // apply offset to x coordinate based on row index (j)\n          x = j % 2 ? x : x + this.props.side / 2\n\n          return (\n            <polygon\n              strokeWidth={value * 0.5}\n              points={`\n                ${x - (sqrt3 * value) / 2} ${y + value / 2}\n                ${x - (sqrt3 * value) / 2} ${y - value / 2}\n                ${x} ${y - value}\n                ${x + (sqrt3 * value) / 2} ${y - value / 2}\n                ${x + (sqrt3 * value) / 2} ${y + value / 2}\n                ${x} ${y + value}\n              `}\n              {...props}\n            />\n          )\n        }}\n      />\n    )\n  }\n}\ntry {\n    // @ts-ignore\n    HexMap.displayName = \"HexMap\";\n    // @ts-ignore\n    HexMap.__docgenInfo = { \"description\": \"\", \"displayName\": \"HexMap\", \"props\": { \"className\": { \"defaultValue\": null, \"description\": \"Custom css classes to pass to the SVG element\", \"name\": \"className\", \"required\": false, \"type\": { \"name\": \"string\" } }, \"width\": { \"defaultValue\": null, \"description\": \"Width of the SVG\", \"name\": \"width\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"height\": { \"defaultValue\": null, \"description\": \"Height of the SVG\", \"name\": \"height\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"data\": { \"defaultValue\": null, \"description\": \"Data array\", \"name\": \"data\", \"required\": true, \"type\": { \"name\": \"any[]\" } }, \"value\": { \"defaultValue\": null, \"description\": \"Value Accessor\", \"name\": \"value\", \"required\": true, \"type\": { \"name\": \"Value\" } }, \"color\": { \"defaultValue\": null, \"description\": \"Color Accessor\", \"name\": \"color\", \"required\": true, \"type\": { \"name\": \"Color\" } }, \"coords\": { \"defaultValue\": null, \"description\": \"Coords Accessor\", \"name\": \"coords\", \"required\": true, \"type\": { \"name\": \"Coords\" } }, \"featureCollection\": { \"defaultValue\": null, \"description\": \"GeoJson\", \"name\": \"featureCollection\", \"required\": true, \"type\": { \"name\": \"FeatureCollection<Geometry, { [name: string]: any; }>\" } }, \"projection\": { \"defaultValue\": null, \"description\": \"GeoProjection\", \"name\": \"projection\", \"required\": true, \"type\": { \"name\": \"GeoProjection\" } }, \"side\": { \"defaultValue\": null, \"description\": \"Grid cell dimension\", \"name\": \"side\", \"required\": true, \"type\": { \"name\": \"number\" } }, \"fill\": { \"defaultValue\": null, \"description\": \"Whether to add the fill color\", \"name\": \"fill\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"stroke\": { \"defaultValue\": null, \"description\": \"Whether to add the stroke color\", \"name\": \"stroke\", \"required\": true, \"type\": { \"name\": \"boolean\" } }, \"tooltip\": { \"defaultValue\": null, \"description\": \"Return HTML or text as a string to show on element mouseover\", \"name\": \"tooltip\", \"required\": false, \"type\": { \"name\": \"(d: any) => string\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"../datalith-hexmap/src/components/HexMap/index.tsx#HexMap\"] = { docgenInfo: HexMap.__docgenInfo, name: \"HexMap\", path: \"../datalith-hexmap/src/components/HexMap/index.tsx#HexMap\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"],"mappings":"AAIA","sourceRoot":""}